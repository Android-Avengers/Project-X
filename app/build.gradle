plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
//    id 'com.github.ben-manes.versions' version '0.41.0' // Alternative declaration
}

android {
    apply from: "$rootDir/dependencies.gradle"

    compileSdk versions.compileSdk

    defaultConfig {
        applicationId "io.velvetcreek.projectx"
        minSdk versions.minSdk
        targetSdk versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    implementation "androidx.core:core-ktx:$versions.ktx"
    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test.ext:junit:$versions.androidXTestJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"

    // Startup
    implementation "androidx.startup:startup-runtime:$versions.startup"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.gson"
    implementation("com.squareup.okhttp3:okhttp:$versions.okhttp")

    // Logging Interceptor
    implementation("com.squareup.okhttp3:logging-interceptor:$versions.okhttp")

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"

    // Hilt
    implementation "com.google.dagger:hilt-android:$versions.hiltCore"
    kapt "com.google.dagger:hilt-compiler:$versions.hiltCore"
    kapt "androidx.hilt:hilt-compiler:$versions.hilt"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$versions.hiltCore"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$versions.hiltViewModel"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$versions.hilt"

    // Timber
    implementation "com.jakewharton.timber:timber:$versions.timber"

    // Room
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room" // use kapt instead of annotationProcessor
    testImplementation "androidx.room:room-testing:$versions.room"
    implementation "androidx.room:room-paging:$versions.room"
    implementation "androidx.room:room-ktx:$versions.room" // coroutines
}
